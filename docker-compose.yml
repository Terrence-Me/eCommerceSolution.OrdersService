version: '3.4'

services:
  ordersmicroservice.api:
    image: ordersmicroserviceapi
    build:
      context: .
      dockerfile: OrdersMicroservice.API/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
      - MONGODB_HOST=mongodb-container
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=OrdersDatabase
      # - UsersMicroserviceName=host.docker.internal
      # - UsersMicroservicePort=5295
      - UsersMicroserviceName=users-microservice
      - UsersMicroservicePort=9090
      - ProductsMicroserviceName=products-microservice
      - ProductsMicroservicePort=8080
    ports:
      - '7000:8080'
    networks:
      - orders-mongodb-network
      - ecommerce-network
    depends_on:
      - mongodb-container


  mongodb-container:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - '27017:27017'
    volumes:
      - ../mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - orders-mongodb-network

  products-microservice:
    image: products-microservice:latest
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_ENVIRONMENT=Development
      - MYSQL_HOST=mysql-container
      - MYSQL_PASSWORD=admin
      - MYSQL_USER=root
      - MYSQL_DATABASE=ecommerceproductsdatabase
      - MYSQL_PORT=3306
    ports: 
      - '6001:8080'
    networks:
      - products-mysql-network
      - ecommerce-network
    depends_on:
      - mysql-container

  mysql-container:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=admin
    ports:
      - '3307:3306'
    volumes:
    - ../mysql-init:/docker-entrypoint-initdb.d
    networks:
      - products-mysql-network

  users-microservice:
   image: users-microservice:latest
   environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_HTTP_ENVIRONMENT=Development
    - POSTGRES_HOST=postgres-container
    - POSTGRES_PORT=5432
    - POSTGRES_DATABASE=eCommerceUsers
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=admin
   ports:
    - "5000:9090"
   networks:
    - users-postgres-network
    - ecommerce-network
   depends_on:
    - postgres-container


  postgres-container:
   image: postgres:13
   environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=admin
    - POSTGRES_DB=eCommerceUsers
   ports:
    - "5434:5432"
   volumes:
    - ../postgres-init:/docker-entrypoint-initdb.d
   networks:
    - users-postgres-network


networks:
 orders-mongodb-network:
  driver: bridge
 products-mysql-network:
  driver: bridge
 users-postgres-network:
  driver: bridge
 ecommerce-network:
  driver: bridge
  


